bag: default
caption: keyvalues
created: 20190607100941928
modified: 20190607140848967
op-input: a [[selection of data tiddler titles|Title Selection]]
op-output: those input tiddlers in which <<.em all>> of the search terms can be found in the value of field <<.place F>>
op-parameter: one or more search terms, separated by spaces, or a literal search string
op-purpose: filter a DataTiddler and show <<.field key>> and/or <<.field value>>
op-suffix: the <<.op keyvalues>> operator uses a rich suffix, see below for details
tags: [[Data Operators]] [[Filter Operators]]
title: keyvalues Operator
type: text/vnd.tiddlywiki

<<.from-version "5.1.20">> The "keyvalues" operator only works with DataTiddlers. Non data-tiddlers will be ignored!

The <<.op keyvalues>> operator uses an extended syntax that permits multiple fields and flags to be passed:

```
[keyvalues:<field list>:<separator>:<flag>[<operand>]]
```

* ''field list'': an ordered, comma delimited list. Either `key`, `value` or both
** defaults to `key,value` if blank
* ''separator'': a separator string used to combine the output string
** defaults to `:` if blank
** If a space is needed, use: `&nbsp;`
* ''flag'': `usekey` or `usevalue` 
** (defaults to `usekey` if blank)
** only 1 flag is allowed. The first one will be used
* ''operand'': filter operand

The following example lists both the <<.field key>> and the <<.field value>>. It uses the string <<.op -xx->> as a separator between key and value. It uses the regexp operand: <<.op digit-pattern>> to filter by the <<.field key>> 

```
<$set name="digit-pattern" value="[0][3-9]:">
[keyvalues:key,value:-xx-:usekey<digit-pattern>]
```

The available flags are:

* ''usekey'' - the <<.field key>> will be used to filter the output. The `<operand>` contains a regexp filter
* ''usevalue'' - the <<.field value>> will be used to filter the output. The `<operand>` contains a regexp filter


<<.operator-examples "keyvalues">>

