created: 20170201225717966
modified: 20230622124801135
tags: default
title: tocP - Parent Based TOC
type: text/vnd.tiddlywiki

! Overview

* This plugin contains several "Table of Content" macros, that have ''almost'' the same parameters as the core toc macro.
* The main difference is, that ''it doesn't use tags'' to create the TOC scructure. 
* It uses a <<.field parent>> field in so called "child - tiddlers".

!! Macro Names

; `tocP`
: A simple tree

; `tocP-expandable`
: A tree in which all the branches can be expanded and collapsed

; `tocP-selective-expandable`
: A tree in which the non-empty branches can be expanded and collapsed

; `tocP-tabbed-internal-nav` and `toc-tabbed-external-nav`
: A two-panel browser:
:* on the left, a selectively expandable tree that behaves like a set of vertical tabs
:* on the right, the content of whichever tiddler the user selects in the tree

The `tabbed-` versions have a different link handling, in the right-hand panel:

; `tocP-tabbed-internal-nav`
: The target tiddler appears in the right-hand panel, replacing the tiddler that contained the link

; `tocP-tabbed-external-nav`
: The target tiddler appears in the normal way (which depends on the user's configured storyview)

!! Structure

* The top level of the tree consists of the tiddlers that carry a particular `parent`, known as the ''root field''. Tiddlers containing a `parent` make up the next level down, and so on.

* Tiddlers can be ordered by the macro's ''sort'' parameter.

* The tree displays the `caption` field of a tiddler if it has one, or the tiddler's title otherwise.

* Each tiddler in the tree is normally displayed as a link. To suppress this, give the tiddler a `toc-link` field with the the value `no`. In the [[examples|GettingStarted]], the [[level-2a]] tiddler is set up like this. Clicking such a tiddler in the tree causes its branch to expand or collapse.

* The table of contents is generated as an HTML ordered list. The `<ol>` elements always have the class `tc-toc`. Expandable trees have the additional class `tc-toc-expandable`. Selectively expandable trees (including those in the two-panel browser) have `tc-toc-selective-expandable`.


!! Parameters

''Standard''

<<<

; tag
: The root tag that identifies the top level of the tree

; sort
: ''Important:'' This parameter is ''different'' to the //toc-macros//. Here, it has to be a valid "subfilter" expression. Internally it is activated like so: `+[subfilter<__sort__>]`
: An optional extra [[filter step|http://tiddlywiki.com/#Filter Step]], e.g. `[sort[title]]` or `[!sort[created]]`
:

; field
: ''Any'' field name, that contains the parent connection. default: `parent`
: If you change the field name, be aware, what you are doing! see:  [[test-tocP-asdf]]

; exclude <<.from-version "5.3.0">>
: This optional parameter can be used to exclude tiddlers from the tocP list. It allows a [[Title List]] or a ''subfilter''. Eg: `exclude:"HelloThere [[Title with spaces]]"` or `exclude:"[has[excludeTOCP]]"`. Where the former will exclude two tiddlers and the later would exclude every tiddler that has a field `excludeTOCP` independent of its value.<br>''Be aware'' that eg: `[prefix[H]]` is a shortcut for `[all[tiddlers]prefix[H]]`, which can have a performance impact, if used carelessly. So use $:/AdvancedSearch -> ''Filters'' tab to test the ''exclude'' parameter

<<<

''Additional Parameters''

<<<

`toc-tabbed-internal-nav` and `toc-tabbed-external-nav` take additional parameters:

; selectedTiddler
: The title of the [[state tiddler|http://tiddlywiki.comStateMechanism]] for noting the currently selected tiddler, defaulting to `$:/temp/toc/selectedTiddler`. It is recommended that this be a [[system tiddler|http://tiddlywiki.com/SystemTiddlers]]

; unselectedText
: The text to display when no tiddler is selected in the tree

; missingText
: The text to display if the selected tiddler doesn't exist

; template
: Optionally, the title of a tiddler to use as a [[template|http://tiddlywiki.com/TemplateTiddlers]] for transcluding the selected tiddler into the right-hand panel

<<<

!! Custom Icons

<<.from-version "5.3.0">>

To change the icons used by the Table-of-Contents macros, redefine the macros `toc-open-icon` and `toc-closed-icon`. This setting works for all toc-macro variants.

!!! Default Settings

''Important: Be aware that there is a "P" in the icon definition!''

* ''tocP-open-icon:'' `\define tocP-open-icon() $:/core/images/down-arrow`  

* ''tocP-closed-icon:'' `\define tocP-closed-icon() $:/core/images/right-arrow` 

!!! Custom Definitions

The default settings can be overwritten in your code using the define-pragma or the let-widget. The [[LetWidget|https://tiddlywiki.com/#LetWidget]] widget can be used, if you have multiple table of contents macros in one tiddler, that need different icons. 

''Define new icons using a pragma''

```
\define tocP-open-icon() $:/core/images/fold-button
\define tocP-closed-icon() $:/core/images/folder
...
```

''Define new icons using the let-widget''

```
<$let tocP-open-icon="$:/core/images/fold-button" toc-closed-icon="$:/core/images/folder">
...
</$let>
```

[[Examples|GettingStarted]]
